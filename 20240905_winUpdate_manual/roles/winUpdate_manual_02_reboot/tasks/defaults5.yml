---
- name: ckeck time2
  shell: "date +%H:%M"
  register: end_time
  delegate_to: localhost

- name: get update info
  win_shell: |
    $hotfixes = Get-HotFix; $targetHotfixes = "{{ kb }}"; $targetHotfixes | ForEach-Object { if ($hotfixes.HotFixID -contains $_) { "$_ is installed." } }
  register: aKB

- name: print update info
  debug:
    msg: "{{ aKB.stdout_lines }}"

- name: get update info2
  win_shell: |
    (Get-HotFix | Sort-Object InstalledOn -Descending | Select-Object -First 1 -ExpandProperty InstalledOn).ToString('yyyy-MM-dd')
  register: lUdate

- name: print update info2
  debug:
    msg: "{{ lUdate.stdout_lines }}"

- name: result / set_fact
  set_fact:
    act_result: {
      'doc': {
        'lastUdate': "{{ lUdate.stdout_lines }}",
        'lastKB': "{{ aKB.stdout_lines }}",
        'endTime': "{{ end_time.stdout_lines.0 }}"
      }
    }

- name: insert result
  ansible.builtin.uri:
    url: "{{ post_win_server_patch_update_url }}"
    user: "elastic"
    password: "elastic1234"
    method: POST
    headers:
      Content-Type: application/json
      Accept: application/json
#       body_format: classesRating_mapping.json
    body_format: json
    body:
      "{{ act_result }}"
    validate_certs: no
    status_code: 200,201
    timeout: 10
  delegate_to: localhost
